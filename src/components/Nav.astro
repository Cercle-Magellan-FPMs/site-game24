---
import { Image } from "astro:assets";

import logo from "@images/Logo_Game24_Original.svg";

const navItems = [
  { title: "Tournois", href: "#tournois" },
  { title: "Sponsors", href: "#sponsors" },
  { title: "Infos pratiques", href: "#" },
  { title: "Ã€ propos de nous", href: "/magellan" },
];
---

<header class="sticky top-0 z-20 bg-white font-semibold text-blue-600 border-b-4 border-blue-600">
  <nav class="container mx-auto flex justify-between gap-4 py-2 px-4">
    <a
      href="/"
      class="inline-flex items-center gap-2 text-base duration-150 hover:opacity-80 xs:text-lg"
    >
    <Image
        class="w-24"
        src={logo}
        alt="Game 24"
        quality={30}
        format="webp"
      />
    </a>
    <ul
      class="hidden flex-wrap justify-between gap-8 lg:flex text-xl"
    >
      {
        navItems.map((navItem) => (
          <li class="mx-auto flex items-center justify-center">
            {navItem.title === "Devenir membre" ? (
              <a
                class="rounded-lg border-2 border-blue-600 bg-blue-600 px-4 py-2 text-white transition duration-150 hover:bg-blue-50 hover:text-blue-600"
                href={navItem.href}
              >
                {navItem.title}
              </a>
            ) : (
              <a
                class="relative px-1 py-1 after:absolute after:bottom-0 after:left-0 after:z-50 after:h-[3px] after:w-0 after:rounded-full after:bg-blue-600 after:duration-500 hover:after:w-full"
                href={navItem.href}
              >
                {navItem.title}
              </a>
            )}
          </li>
        ))
      }
    </ul>
    <button id="menu-toggle" class="focus:outline-none lg:hidden">
      <svg
        class="h-8 w-8"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="3"
          d="M4 6h16M4 12h16m-7 6h7"></path>
      </svg>
    </button>
  </nav>
  <div
    id="mobile-menu"
    data-visible="false"
    class="fixed bottom-0 right-0 top-0 hidden bg-white bg-opacity-95 shadow-box backdrop-blur-sm lg:hidden"
  >
    <div class="flex justify-end p-4">
      <button id="menu-close" class="my-1">
        <svg
          class="h-8 w-8"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="3"
            d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>
    <ul class="flex h-full flex-col gap-4 p-8">
      {
        navItems.map((navItem) => (
          <li class="flex flex-col space-y-4">
            <div class="inline-flex">
              {navItem.title === "Devenir membre" ? (
                <a
                  class="rounded-lg border-2 border-blue-600 bg-blue-600 px-4 py-2 text-white transition duration-150 hover:bg-blue-50 hover:text-blue-600"
                  href={navItem.href}
                >
                  {navItem.title}
                </a>
              ) : (
                <a
                  class="relative px-1 py-1 after:absolute after:bottom-0 after:left-0 after:z-50 after:h-[3px] after:w-0 after:rounded-full after:bg-blue-600 after:duration-500 hover:after:w-full"
                  href={navItem.href}
                >
                  {navItem.title}
                </a>
              )}
            </div>
          </li>
        ))
      }
    </ul>
  </div>
</header>

<script>
  document.addEventListener("click", function (event) {
    const mobileMenu = document.getElementById("mobile-menu");
    const menuToggle = document.getElementById("menu-toggle");
    const menuClose = document.getElementById("menu-close");
    if (event.target instanceof Node) {
      if (menuToggle?.contains(event.target)) {
        mobileMenu?.classList.remove("hidden");
        mobileMenu?.setAttribute("data-visible", "true");
      } else if (
        menuClose?.contains(event.target) ||
        (!mobileMenu?.contains(event.target) &&
          mobileMenu?.getAttribute("data-visible") === "true")
      ) {
        mobileMenu?.classList.add("hidden");
        mobileMenu?.setAttribute("data-visible", "false");
      }
    }
  });
</script>
